{"version":3,"sources":["components/base/Wrapper/Wrapper.js","components/base/Typography/Title.js","components/base/Typography/Text.js","components/base/Icon/Icon.js","components/game/Cell.js","components/base/Container/Container.js","components/base/Container/ContainerContent.js","components/base/Container/ContainerControl.js","components/base/Container/ContainerTitle.js","components/game/Board.js","components/base/RadioButton/RadioButton.js","components/game/ModeSettings.js","components/game/PlayerSettings.js","components/base/Button/Button.js","components/base/Message/MessageTitle.js","components/base/Message/MessageContent.js","components/base/Message/Message.js","components/game/Result.js","components/pages/Game/Game.js","App.js","index.js"],"names":["Wrapper","children","className","Title","type","Text","align","isLight","isAccent","Icon","name","renderIcon","icon","faTimes","faDotCircle","faSync","faPlay","faCheck","faChevronRight","faSmileWink","isInline","aria-hidden","Cell","index","value","onClick","disabled","Container","isActive","ContainerContent","hasTitle","ContainerControl","position","label","ContainerTitle","Board","step","winner","draw","cells","clickCell","tryAgain","restartGame","move","isGameStarted","renderCell","cellValue","board","i","length","push","renderBoard","RadioButton","onChange","activeState","id","htmlFor","ModeSettings","mode","changeMode","selectMode","PlayerSettings","firstPlayer","selectPlayer","changePlayer","Button","MessageTitle","MessageContent","Message","title","content","Result","ResultControls","Game","useState","Array","from","keys","setCells","setMode","setFirstPlayer","secondPlayer","setSecondPlayer","setWinner","setMove","setStep","setDraw","player","isSettingsEmpty","setIsSettingsEmpty","setGameStarted","useEffect","findWinner","checkDraw","console","log","hasAvailableCells","map","cell","getRandomCell","Math","floor","random","checkRandomCell","randomCell","result","currentCells","makeMove","isModeEmpty","target","isPlayerEmpty","e","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24eb1b6a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './style.scss';\n\nconst Wrapper = ({ children }) => {\n    return (\n        <div className=\"wrapper\">{children}</div>\n    );\n};\n\nWrapper.propTypes = {\n    children: PropTypes.object,\n};\n\nexport default Wrapper;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Title = ({ children, type }) => {\n    switch (type) {\n        case 'h1':\n            return <h1 className={`title title--${type}`}>{children}</h1>;\n        case 'h2':\n            return <h2 className={`title title--${type}`}>{children}</h2>;\n        case 'h3':\n            return <h3 className={`title title--${type}`}>{children}</h3>;\n        case 'h4':\n            return <h4 className={`title title--${type}`}>{children}</h4>;\n        case 'h5':\n            return <h5 className={`title title--${type}`}>{children}</h5>;\n        case 'h6':\n            return <h6 className={`title title--${type}`}>{children}</h6>;\n        default:\n            return null;\n    }\n};\n\nTitle.propTypes = {\n    children: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Text = ({ children, align, isLight, isAccent }) => {\n    return (\n        <p className={`text${align ? ` text--${align}` : ''}${isLight && !isAccent ? ' text--light' : ''}${isAccent && !isLight ? ' text--accent' : ''}`}>{children}</p>\n    );\n};\n\nText.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n    align: PropTypes.string,\n    isLight: PropTypes.bool,\n    isAccent: PropTypes.bool,\n};\n\nexport default Text;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSmileWink,\n  faTimes,\n  faCheck,\n  faPlay,\n  faSync,\n  faDotCircle,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport './style.scss';\n\nconst Icon = ({ name, className, isInline }) => {\n  const renderIcon = () => {\n    switch (name) {\n      case 'cross':\n        return <FontAwesomeIcon icon={faTimes} />;\n      case 'circle':\n        return <FontAwesomeIcon icon={faDotCircle} />;\n      case 'repeat':\n        return <FontAwesomeIcon icon={faSync} />;\n      case 'play':\n        return <FontAwesomeIcon icon={faPlay} />;\n      case 'check':\n        return <FontAwesomeIcon icon={faCheck} />;\n      case 'close':\n        return <FontAwesomeIcon icon={faTimes} />;\n      case 'next':\n        return <FontAwesomeIcon icon={faChevronRight} />;\n      case 'smile':\n        return <FontAwesomeIcon icon={faSmileWink} />;\n      default:\n        return <FontAwesomeIcon icon={faSmileWink} />;\n    };\n  };\n\n  if(isInline) {\n    return (\n        <span className={`icon${className ? ` ${className}` : ''}`} aria-hidden=\"true\">\n          {renderIcon()}\n        </span>\n    );\n  } else return (\n    <div className={`icon${className ? ` ${className}` : ''}`} aria-hidden=\"true\">\n      {renderIcon()}\n    </div>\n  );\n};\n\nIcon.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  isInline: PropTypes.bool\n};\n\nexport default Icon;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Icon from './../base/Icon/';\n\nconst Cell = ({ index, value, onClick, disabled }) => {\n\treturn (\n\t\t<button\n\t\t\tonClick={() => onClick(index)}\n\t\t\tclassName={`cell${disabled ? ' cell--disabled' : ''}`}\n\t\t>\n\t\t\t<span className=\"cell__index\">{index}</span>\n\t\t\t{value === 'X' && (\n\t\t\t\t<Icon name=\"cross\" className=\"cell__icon cell__icon--cross\" />\n\t\t\t)}\n\t\t\t{value === '0'&& (\n\t\t\t\t<Icon name=\"circle\" className=\"cell__icon cell__icon--circle\" />\n\t\t\t)}\n\t\t</button>\n\t);\n};\n\nCell.propTypes = {\n    onClick: PropTypes.func,\n    index: PropTypes.number,\n\tvalue: PropTypes.string,\n\tdisabled: PropTypes.bool,\n};\n\nexport default Cell;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './style.scss';\n\nconst Container = ({ children, isActive }) => {\n\treturn (\n    <div className={`container${isActive ? ' container--active' : ''}`}>\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.array,\n  isActive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ContainerContent = ({ children, hasTitle }) => {\n\treturn (\n    <div className={`container-content${hasTitle ? ' container-content--has-title' : ''}`}>\n      {children}\n    </div>\n  );\n};\n\nContainerContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),\n  hasTitle: PropTypes.bool,\n};\n\nexport default ContainerContent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Icon from './../Icon';\n\nimport './style.scss';\n\nconst ContainerControl = ({ onClick, position, label, icon }) => {\n  return (\n    <div className={`container-control container-control--${position}`}>\n      <button className=\"container-button\" onClick={onClick}>\n        <Icon className=\"container-button__icon\" name={icon} isInline />\n        <span className=\"container-button__label\">{label}</span>\n      </button>\n    </div>\n  )\n};\n\nContainerControl.propTypes = {\n  onClick: PropTypes.func,\n  position: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default ContainerControl;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Title } from './../Typography/';\n\nconst ContainerTitle = ({ children }) => {\n\treturn (\n    <div className=\"container-title\">\n      <Title type=\"h1\">{children}</Title>\n    </div>\n  );\n};\n\nContainerTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default ContainerTitle;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../base/Typography/';\nimport Cell from './Cell';\nimport { Container, ContainerContent, ContainerControl, ContainerTitle } from './../base/Container/';\n\nimport './style.scss';\n\nconst Board = ({ step, winner, draw, cells, clickCell, tryAgain, restartGame, move, isGameStarted }) => {\n    const renderBoard = (cells) => {\n\t\tlet board = [];\n\n\t\tfor(let i = 0; i < cells.length; i++) {\n\t\t\tboard.push(renderCell(i, cells[i]));\n\t\t}\n\n\t\treturn board;\n    };\n\n\tconst renderCell = (index, value) => {\n\t\tconst cellValue = index === value ? '' : value;\n\t\tconst disabled = (winner || draw) && index === value ? true : false;\n\n\t\treturn (\n\t\t\t<Cell\n\t\t\t\tkey={index}\n\t\t\t\tindex={index}\n\t\t\t\tvalue={cellValue}\n\t\t\t\tonClick={() => clickCell(index)}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (step === 2 || step === 3) {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<ContainerTitle>Tic Tac Toe</ContainerTitle>\n\t\t\t\t<ContainerContent hasTitle>\n\t\t\t\t\t{(!winner || !draw) && (\n\t\t\t\t\t\t<Text align=\"center\" isAccent>Move: {move}</Text>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"board\">\n\t\t\t\t\t\t{renderBoard(cells)}\n\t\t\t\t\t</div>\n\t\t\t\t</ContainerContent>\n\t\t\t\t<ContainerControl\n\t\t\t\t\tonClick={restartGame}\n\t\t\t\t\tposition=\"right\"\n\t\t\t\t\tlabel=\"Restart game\"\n\t\t\t\t\ticon=\"close\"\n\t\t\t\t/>\n\t\t\t\t{(!winner || !draw || isGameStarted) && (\n\t\t\t\t\t<ContainerControl\n\t\t\t\t\t\tonClick={tryAgain}\n\t\t\t\t\t\tposition=\"bottom\"\n\t\t\t\t\t\tlabel=\"Try again\"\n\t\t\t\t\t\ticon=\"repeat\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t);\n\t} else return null;\n};\n\nBoard.propTypes = {\n\tstep: PropTypes.number,\n\twinner: PropTypes.string,\n\tdraw: PropTypes.bool,\n    cells: PropTypes.array,\n\tonClick: PropTypes.func,\n\ttryAgain: PropTypes.func,\n\trestartGame: PropTypes.func,\n\tmove: PropTypes.string,\n\tisGameStarted: PropTypes.bool,\n};\n\nexport default Board;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Icon from './../Icon/';\n\nimport './style.scss';\n\nconst RadioButton = ({ name, label, onChange, activeState, value, id, className }) => {\n    return (\n        <div className={`radio-button${activeState === value ? ' radio-button--active' : ''}${className ? ` radio-button--${className}` : ''}`}>\n            <input\n                type=\"radio\"\n                name={name}\n                id={id}\n                value={value}\n                className=\"radio-button__input\"\n                onChange={(value) => onChange(value)}\n            />\n            <label\n                className=\"radio__label\"\n                htmlFor=\"singleMode\"\n            >\n                {activeState === value && <Icon name=\"check\" className=\"radio-button__icon\" />} {label}\n            </label>\n        </div>\n    );\n};\n\nRadioButton.propTypes = {\n    children: PropTypes.object,\n    label:  PropTypes.string,\n    onChange:  PropTypes.func,\n    activeState:  PropTypes.string,\n    value:  PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default RadioButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../base/Typography/';\nimport { Container, ContainerContent, ContainerControl, ContainerTitle } from './../base/Container/';\nimport RadioButton from './../base/RadioButton';\n\nconst ModeSettings = ({ step, mode, changeMode, selectMode }) => {\n\tif (step === 0) {\n\t\treturn (\n\t\t\t<Container isActive={mode}>\n\t\t\t\t<ContainerTitle>Mode</ContainerTitle>\n\t\t\t\t<ContainerContent hasTitle>\n\t\t\t\t\t<Text align=\"center\">Select game mode:</Text>\n\t\t\t\t\t<RadioButton\n\t\t\t\t\t\tlabel=\"Single\"\n\t\t\t\t\t\tonChange={(value) => changeMode(value)}\n\t\t\t\t\t\tactiveState={mode}\n\t\t\t\t\t\tvalue=\"single\"\n\t\t\t\t\t\tid=\"singleMode\"\n\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\tclassName=\"block\"\n\t\t\t\t\t/>\n\t\t\t\t\t<RadioButton\n\t\t\t\t\t\tlabel=\"With friend\"\n\t\t\t\t\t\tonChange={(value) => changeMode(value)}\n\t\t\t\t\t\tactiveState={mode}\n\t\t\t\t\t\tvalue=\"friend\"\n\t\t\t\t\t\tid=\"friendMode\"\n\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\tclassName=\"block\"\n\t\t\t\t\t/>\n\t\t\t\t</ContainerContent>\n\t\t\t\t{mode && (\n\t\t\t\t\t<ContainerControl\n\t\t\t\t\t\tonClick={selectMode}\n\t\t\t\t\t\tposition=\"bottom\"\n\t\t\t\t\t\tlabel=\"Select mode\"\n\t\t\t\t\t\ticon=\"next\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t);\n\t} else return null;\n};\n\nModeSettings.propTypes = {\n\tstep: PropTypes.number,\n\tchangeMode: PropTypes.func,\n\tselectMode: PropTypes.func,\n\tmode: PropTypes.string,\n};\n\nexport default ModeSettings;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Text } from './../base/Typography/';\nimport { Container, ContainerContent, ContainerControl, ContainerTitle } from './../base/Container/';\nimport RadioButton from './../base/RadioButton';\n\nconst PlayerSettings = ({ step, firstPlayer, mode, selectPlayer, changePlayer }) => {\n    if (step === 1) {\n        return (\n            <Container isActive={firstPlayer}>\n                <ContainerTitle>Side</ContainerTitle>\n                <ContainerContent hasTitle>\n                    <Text align=\"center\">{mode === \"single\" ? 'Pick your side' : 'Choose first move'}:</Text>\n                    <RadioButton\n                        label=\"X\"\n                        onChange={(value) => changePlayer(value)}\n                        activeState={firstPlayer}\n                        value=\"X\"\n                        id=\"playerX\"\n                        name=\"player\"\n                    />\n                    <RadioButton\n                        label=\"O\"\n                        onChange={(value) => changePlayer(value)}\n                        activeState={firstPlayer}\n                        value=\"0\"\n                        id=\"playerO\"\n                        name=\"player\"\n                    />\n                </ContainerContent>\n                {firstPlayer && (\n                    <ContainerControl\n                        onClick={selectPlayer}\n                        position=\"bottom\"\n                        label=\"Select side\"\n                        icon=\"next\"\n                    />\n                )}\n            </Container>\n        );\n    } else return null;\n};\n\nPlayerSettings.propTypes = {\n    step: PropTypes.number,\n    mode: PropTypes.string,\n\tchangePlayer: PropTypes.func,\n    selectPlayer: PropTypes.func,\n    firstPlayer: PropTypes.string,\n};\n\nexport default PlayerSettings;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './style.scss';\n\nconst Button = ({ children, onClick, type }) => {\n    return (\n        <button\n            className={`button${type ? ` button--${type}` : ''}`}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    children: PropTypes.object,\n    onClick:  PropTypes.func,\n    type:  PropTypes.string,\n};\n\nexport default Button;","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MessageTitle = ({ children }) => {\n  return (\n    <div className=\"message__title\">{children}</div>\n  );\n};\n\nMessageTitle.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default MessageTitle;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MessageContent = ({ children }) => {\n  return (\n    <div className=\"message__content\">{children}</div>\n  );\n};\n\nMessageContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default MessageContent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MessageTitle from './MessageTitle';\nimport MessageContent from './MessageContent';\n\nimport './style.scss';\n\nconst Message = ({ type, title, content }) => {\n  return (\n    <div className={`message${type ? ` message--${type}` : ''}`}>\n      <MessageTitle>{title}</MessageTitle>\n      {content && <MessageContent>{content}</MessageContent>}\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  type: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default Message;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Button from './../base/Button';\nimport Message from './../base/Message'\n\nconst Result = ({ winner, draw, step, restartGame, tryAgain }) => {\n\tconst ResultControls = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button onClick={restartGame} type=\"primary\">Restart</Button>\n\t\t\t\t<Button onClick={tryAgain} type=\"secondary\">Try again</Button>\n\t\t\t</>\n\t\t);\n\t};\n\n\tif (step === 3) {\n\t\treturn (\n\t\t\t<Message\n\t\t\t\ttype={winner ? 'success' : draw ? 'info' : 'error'}\n\t\t\t\ttitle={winner ? `Wow, ${winner} win!` : draw ? `Yay, it's draw` : ''}\n\t\t\t\tcontent={<ResultControls/>}\n\t\t\t/>\n\t\t);\n\t} else return null;\n};\n\nResult.propTypes = {\n\tstep: PropTypes.number,\n\twinner: PropTypes.string,\n\tdraw: PropTypes.bool,\n\ttryAgain: PropTypes.func,\n\trestartGame: PropTypes.func,\n};\n\nexport default Result;\n","import React, { useState, useEffect } from 'react';\n\nimport Wrapper from './../../base/Wrapper';\nimport { Board, ModeSettings, Result, Info, PlayerSettings } from './../../game/index'\n\nimport './style.scss';\n\nconst Game = () => {\n\tconst [cells, setCells] = useState(Array.from(Array(9).keys()));\n\tconst [mode, setMode] = useState(null);\n\tconst [firstPlayer, setFirstPlayer] = useState(null);\n\tconst [secondPlayer, setSecondPlayer] = useState(null);\n\tconst [winner, setWinner] = useState(null);\n\tconst [move, setMove] = useState(null);\n\tconst [step, setStep] = useState(0);\n\tconst [draw, setDraw] = useState(false);\n\tconst [isSettingsEmpty, setIsSettingsEmpty] = useState({ mode: null, player: null });\n\tconst [isGameStarted, setGameStarted] = useState(false);\n\n\tuseEffect(() => {\n\t\tfindWinner(firstPlayer);\n\t\tfindWinner(secondPlayer);\n\t\tcheckDraw()\n\t}, [move, cells]);\n\n\n\tconst findWinner = (player) => {\n\t\tif(\n\t\t\t(cells[0] === player && cells[1] === player && cells[2] === player) ||\n\t\t\t(cells[3] === player && cells[4] === player && cells[5] === player) ||\n\t\t\t(cells[6] === player && cells[7] === player && cells[8] === player) ||\n\t\t\t(cells[0] === player && cells[3] === player && cells[6] === player) ||\n\t\t\t(cells[1] === player && cells[4] === player && cells[7] === player) ||\n\t\t\t(cells[2] === player && cells[5] === player && cells[8] === player) ||\n\t\t\t(cells[0] === player && cells[4] === player && cells[8] === player) ||\n\t\t\t(cells[2] === player && cells[4] === player && cells[6] === player)\n\t\t\t) {\n\t\t\tconsole.log(player, ' is win!')\n\t\t\tsetWinner(player)\n\t\t\tsetStep(3);\n\t\t};\n\t};\n\n\tconst checkDraw = () => {\n\t\tlet hasAvailableCells = false;\n\n\t\tcells.map((cell, index) => {\n\t\t\tif (cell === index) hasAvailableCells = true;\n\t\t})\n\n\t\tif (!hasAvailableCells) {\n\t\t\tconsole.log('its draw')\n\t\t\tsetDraw(true);\n\t\t\tsetStep(3)\n\t\t}\n\t};\n\n\n\tconst changeMode = (e) => {\n\t\tsetMode(e.target.value);\n\t};\n\n\tconst selectMode = () => {\n\t\tif (mode) {\n\t\t\tif (isSettingsEmpty.mode) {\n\t\t\t\tsetIsSettingsEmpty({\n\t\t\t\t\t...isSettingsEmpty,\n\t\t\t\t\tmode: false,\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetStep(1);\n\t\t} else {\n\t\t\tsetIsSettingsEmpty({\n\t\t\t\t...isSettingsEmpty,\n\t\t\t\tmode: true,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst changePlayer = (e) => {\n\t\tsetFirstPlayer(e.target.value);\n\t\tif (e.target.value === \"X\") {\n\t\t\tsetSecondPlayer(\"0\");\n\t\t} else if (e.target.value === \"0\") {\n\t\t\tsetSecondPlayer(\"X\");\n\t\t}\n\t};\n\n\tconst selectPlayer = () => {\n\t\tif (firstPlayer) {\n\t\t\tif (isSettingsEmpty.player) {\n\t\t\t\tsetIsSettingsEmpty({\n\t\t\t\t\t...isSettingsEmpty,\n\t\t\t\t\tplayer: false,\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetMove(firstPlayer);\n\t\t\tsetStep(2);\n\t\t} else {\n\t\t\tsetIsSettingsEmpty({\n\t\t\t\t...isSettingsEmpty,\n\t\t\t\tplayer: true,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst getRandomCell = () => {\n\t\treturn Math.floor(Math.random() * 9) + 0;\n\t};\n\n\tconst checkRandomCell = (randomCell) => {\n\t\tlet result = true;\n\n\t\tcells.map((cell, index) => {\n\t\t\tif((randomCell === index) && (cell !== index)) {\n\t\t\t\tresult = false;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t};\n\n\tconst makeMove = () => {\n\t\tlet randomCell = getRandomCell();\n\t\tconsole.log('random cell: ', randomCell)\n\n\t\twhile (checkRandomCell(randomCell) === false) {\n\t\t\trandomCell = getRandomCell();\n\t\t}\n\n\t\tconsole.log('do new move at ' + randomCell + ' by ' + secondPlayer);\n\n\t\treturn randomCell;\n\t};\n\n\tconst clickCell = (index) => {\n\t\tsetGameStarted(true);\n\n\t\tif(winner === null && !draw) {\n\t\t\tconst currentCells = [...cells];\n\t\t\tif (mode === 'friend') {\n\t\t\t\tif (index === currentCells[index]) {\n\t\t\t\t\tcurrentCells[index] = move;\n\t\t\t\t\tsetCells(currentCells);\n\t\t\t\t\tif (move === firstPlayer) setMove(secondPlayer);\n\t\t\t\t\tif (move === secondPlayer) setMove(firstPlayer);\n\t\t\t\t} else console.log('whoops cell already clicked')\n\t\t\t} else {\n\t\t\t\tfindWinner(firstPlayer);\n\t\t\t\tfindWinner(secondPlayer);\n\t\t\t\tif (move === secondPlayer) {\n\t\t\t\t\tfindWinner(firstPlayer);\n\t\t\t\t\tfindWinner(secondPlayer);\n\t\t\t\t}\n\t\t\t\tif (move === firstPlayer) {\n\t\t\t\t\tif (index === currentCells[index]) {\n\t\t\t\t\t\tsetMove(secondPlayer);\n\t\t\t\t\t\tcurrentCells[index] = move;\n\t\t\t\t\t\tsetCells(currentCells);\n\t\t\t\t\t\tconst randomMove = makeMove();\n\t\t\t\t\t\tcurrentCells[randomMove] = secondPlayer;\n\t\t\t\t\t\tsetMove(firstPlayer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst restartGame = () => {\n\t\tsetWinner(null);\n\t\tsetFirstPlayer(null);\n\t\tsetSecondPlayer(null);\n\t\tsetMode(null);\n\t\tsetDraw(false);\n\t\tsetCells(Array.from(Array(9).keys()));\n\t\tsetStep(0);\n\t};\n\n\tconst tryAgain = () => {\n\t\tsetWinner(null);\n\t\tsetDraw(false);\n\t\tsetCells(Array.from(Array(9).keys()));\n\t\tsetStep(2);\n\t\tsetMove(firstPlayer);\n\t\tsetGameStarted(false);\n\t};\n\n\treturn (\n  \t\t<Wrapper>\n\t\t\t{false && <Info\n\t\t\t\tcells={cells}\n\t\t\t\tstep={step}\n\t\t\t\tmode={mode}\n\t\t\t\tfirstPlayer={firstPlayer}\n\t\t\t\tsecondPlayer={secondPlayer}\n\t\t\t\tmove={move}\n\t\t\t\twinner={winner}\n\t\t\t/>}\n\t\t\t<ModeSettings\n\t\t\t\tstep={step}\n\t\t\t\tmode={mode}\n\t\t\t\tisModeEmpty={isSettingsEmpty.mode}\n\t\t\t\tselectMode={() => selectMode()}\n\t\t\t\tchangeMode={(value) => changeMode(value)}\n\t\t\t/>\n\t\t\t<PlayerSettings\n\t\t\t\tstep={step}\n\t\t\t\tfirstPlayer={firstPlayer}\n\t\t\t\tisPlayerEmpty={isSettingsEmpty.player}\n\t\t\t\tmode={mode}\n\t\t\t\tselectPlayer={() => selectPlayer()}\n\t\t\t\tchangePlayer={(value) => changePlayer(value)}\n\t\t\t/>\n\t\t\t<Board\n\t\t\t\tstep={step}\n\t\t\t\tcells={cells}\n\t\t\t\tclickCell={index => clickCell(index)}\n\t\t\t\trestartGame={restartGame}\n\t\t\t\ttryAgain={tryAgain}\n\t\t\t\twinner={winner}\n\t\t\t\tdraw={draw}\n\t\t\t\tmove={move}\n\t\t\t\tisGameStarted={isGameStarted}\n\t\t\t/>\n\t\t\t<Result\n\t\t\t\tstep={step}\n\t\t\t\twinner={winner}\n\t\t\t\tdraw={draw}\n\t\t\t\trestartGame={restartGame}\n\t\t\t\ttryAgain={tryAgain}\n\t\t\t/>\n\n\n\t\t{/*<SelectSide mode={mode} handlePlayer={player => handlePlayer(player)} />*/}\n\n\t\t{/*<MoveInfo move={move} />*/}\n\n\t\t{/*<Board cells={cells} onClick={index => handleCellClick(index)} />*/}\n\t\t{/*<button onClick={() => handleReset()}>Restart</button>*/}\n\n\t\t{/*<Result\n\t\twinner={winner}\n\t\tdraw={draw}\n\t\thandleNextTry={() => handleNextTry()}\n\t\thandleReset={() => handleReset()}\n\t\t/>*/}\n\t\t</Wrapper>\n\t);\n};\n\nexport default Game;\n","import React from 'react';\n\nimport Game from './components/pages/Game';\n\nimport './styles/main.scss';\n\nconst App = () => {\n  return (\n    <Game />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}